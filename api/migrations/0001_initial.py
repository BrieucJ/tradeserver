# Generated by Django 3.0.7 on 2020-09-24 21:21

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_cryptography.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Index',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=5)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['symbol'],
                'unique_together': {('symbol',)},
            },
        ),
        migrations.CreateModel(
            name='NeuralNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nn_name', models.CharField(default=None, max_length=500)),
                ('nn_type', models.CharField(default=None, max_length=500)),
                ('batch_size', models.FloatField(default=None)),
                ('drop_val', models.FloatField(default=None)),
                ('dropout', models.BooleanField(default=None)),
                ('features', models.CharField(default=None, max_length=50000)),
                ('last_epoch', models.IntegerField(default=None)),
                ('loss', models.FloatField(default=None)),
                ('loss_fn', models.CharField(default=None, max_length=500)),
                ('n_epoch', models.IntegerField(default=None)),
                ('n_hidden_layers', models.IntegerField(default=None)),
                ('optimizer', models.CharField(default=None, max_length=500)),
                ('test_accuracy', models.FloatField(default=None)),
                ('test_loss', models.FloatField(default=None)),
                ('units', models.IntegerField(default=None)),
                ('val_accuracy', models.FloatField(default=None)),
                ('val_loss', models.FloatField(default=None)),
            ],
            options={
                'unique_together': {('nn_name', 'test_accuracy')},
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portfolio_type', models.BooleanField(default=False)),
                ('currency', models.CharField(default='â‚¬', max_length=1)),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=False)),
                ('neural_network', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='portfolio', to='api.NeuralNetwork')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=5)),
                ('name', models.CharField(max_length=50)),
                ('sector', models.CharField(max_length=50)),
                ('industry', models.CharField(max_length=50)),
                ('valid', models.BooleanField(default=False)),
                ('index', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='index', to='api.Index')),
            ],
            options={
                'ordering': ['symbol'],
                'unique_together': {('symbol',)},
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broker_username', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=50, null=True))),
                ('broker_password', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=50, null=True))),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_date', models.DateField(default=None)),
                ('prediction', models.FloatField()),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prediction', to='api.NeuralNetwork')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prediction', to='api.Stock')),
            ],
            options={
                'ordering': ['-price_date'],
                'unique_together': {('price_date', 'stock', 'model')},
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_date', models.DateTimeField(default=None, null=True)),
                ('open_rate', models.FloatField(default=0)),
                ('num_of_shares', models.IntegerField(default=0)),
                ('total_investment', models.FloatField(default=0)),
                ('stop_loss_rate', models.FloatField(default=0)),
                ('take_profit_rate', models.FloatField(default=0)),
                ('current_rate', models.FloatField(default=0)),
                ('updated_at', models.DateTimeField(default=None, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('close_rate', models.FloatField(default=0)),
                ('close_date', models.DateTimeField(default=None, null=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='api.Portfolio')),
                ('stock', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='position', to='api.Stock')),
            ],
            options={
                'ordering': ['-open_date'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash', models.FloatField(default=None, null=True)),
                ('total_invested_value', models.FloatField(default=None, null=True)),
                ('latent_p_l', models.FloatField(default=None, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_history', to='api.Portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='IndexHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_date', models.DateField(default=None)),
                ('open', models.FloatField(default=0)),
                ('high', models.FloatField(default=0)),
                ('low', models.FloatField(default=0)),
                ('close', models.FloatField(default=0)),
                ('volume', models.BigIntegerField(default=0)),
                ('created_at', models.DateField(default=datetime.date.today)),
                ('index', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='index_history', to='api.Index')),
            ],
            options={
                'ordering': ['price_date'],
            },
        ),
        migrations.CreateModel(
            name='BuyOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_date', models.DateField(default=None, null=True)),
                ('num_of_shares', models.IntegerField(default=None)),
                ('order_rate', models.FloatField(default=None, null=True)),
                ('current_rate', models.FloatField(default=None, null=True)),
                ('total_investment', models.FloatField(default=None, null=True)),
                ('stop_loss', models.FloatField(default=None, null=True)),
                ('take_profit', models.FloatField(default=None, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('submited_at', models.DateTimeField(default=None, null=True)),
                ('executed_at', models.DateTimeField(default=None, null=True)),
                ('canceled_at', models.DateTimeField(default=None, null=True)),
                ('terminated_at', models.DateTimeField(default=None, null=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_order', to='api.Portfolio')),
                ('position', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buy_order', to='api.Position')),
                ('prediction', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buy_order', to='api.Prediction')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_order', to='api.Stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_order', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SellOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('submited_at', models.DateTimeField(default=None, null=True)),
                ('executed_at', models.DateTimeField(default=None, null=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell_order', to='api.Portfolio')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell_order', to='api.Position')),
                ('prediction', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sell_order', to='api.Prediction')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell_order', to='api.Stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell_order', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'position', 'stock', 'portfolio')},
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_date', models.DateField(default=None)),
                ('open', models.FloatField(default=0)),
                ('high', models.FloatField(default=0)),
                ('low', models.FloatField(default=0)),
                ('close', models.FloatField(default=0)),
                ('volume', models.BigIntegerField(default=0)),
                ('created_at', models.DateField(default=datetime.date.today)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='api.Stock')),
            ],
            options={
                'ordering': ['-price_date'],
                'unique_together': {('stock', 'price_date')},
            },
        ),
        migrations.AddConstraint(
            model_name='position',
            constraint=models.UniqueConstraint(condition=models.Q(close_date__isnull=True), fields=('stock', 'portfolio'), name='unique stock if in portfolio'),
        ),
        migrations.AlterUniqueTogether(
            name='portfolio',
            unique_together={('user', 'portfolio_type')},
        ),
        migrations.AlterUniqueTogether(
            name='indexhistory',
            unique_together={('index', 'price_date')},
        ),
    ]
