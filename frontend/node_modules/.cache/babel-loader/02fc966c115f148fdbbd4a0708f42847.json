{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/TradeServer/frontend/src/components/App.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\nimport { get } from '../utils/Api';\nimport { Checkbox, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      get('stocks/').then(resp => {\n        this.setState({\n          ticker_list: resp\n        });\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      ticker_list: [],\n      selected_tickers: []\n    };\n  }\n\n  handleSelection(symbol) {\n    const currentIndex = this.state.selected_tickers.indexOf(symbol);\n\n    if (currentIndex == -1) {\n      this.setState({\n        selected_tickers: [...this.state.selected_tickers, symbol]\n      });\n    } else {\n      this.state.selected_tickers.splice(currentIndex, 1);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, this.state.ticker_list.map(value => {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: value.symbol,\n        role: undefined,\n        dense: true,\n        button: true,\n        onClick: () => {\n          this.handleSelection(value.symbol);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        edge: \"start\",\n        checked: this.state.selected_tickers.indexOf(value.symbol) !== -1,\n        disableRipple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        id: value.symbol,\n        primary: value.symbol,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }));\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/TradeServer/frontend/src/components/App.js"],"names":["React","Plot","get","Checkbox","List","ListItem","ListItemIcon","ListItemText","App","Component","constructor","props","componentDidMount","then","resp","setState","ticker_list","console","log","state","selected_tickers","handleSelection","symbol","currentIndex","indexOf","splice","render","map","value","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,QAAxB,EAAkCC,YAAlC,EAAgDC,YAAhD,QAAmE,mBAAnE;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,iBAPmB,GAOC,YAAY;AAC9BV,MAAAA,GAAG,CAAC,SAAD,CAAH,CAAeW,IAAf,CAAqBC,IAAD,IAAU;AAC5B,aAAKC,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAEF;AAAd,SAAd;AACD,OAFD;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD,KAZkB;;AAEjB,SAAKA,KAAL,GAAa;AACXH,MAAAA,WAAW,EAAE,EADF;AAEXI,MAAAA,gBAAgB,EAAE;AAFP,KAAb;AAID;;AAQDC,EAAAA,eAAe,CAACC,MAAD,EAAQ;AACrB,UAAMC,YAAY,GAAG,KAAKJ,KAAL,CAAWC,gBAAX,CAA4BI,OAA5B,CAAoCF,MAApC,CAArB;;AACA,QAAIC,YAAY,IAAI,CAAC,CAArB,EAAwB;AACtB,WAAKR,QAAL,CAAc;AAACK,QAAAA,gBAAgB,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,gBAAf,EAAiCE,MAAjC;AAAnB,OAAd;AACD,KAFD,MAEO;AACL,WAAKH,KAAL,CAAWC,gBAAX,CAA4BK,MAA5B,CAAmCF,YAAnC,EAAiD,CAAjD;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKP,KAAL,CAAWH,WAAX,CAAuBW,GAAvB,CAA4BC,KAAD,IAAW;AACrC,0BACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,KAAK,CAACN,MAArB;AAA6B,QAAA,IAAI,EAAEO,SAAnC;AAA8C,QAAA,KAAK,MAAnD;AAAoD,QAAA,MAAM,MAA1D;AAA2D,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKR,eAAL,CAAqBO,KAAK,CAACN,MAA3B;AAAmC,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,gBAAX,CAA4BI,OAA5B,CAAoCI,KAAK,CAACN,MAA1C,MAAsD,CAAC,CAFlE;AAGE,QAAA,aAAa,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAQE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAEM,KAAK,CAACN,MAAxB;AAAgC,QAAA,OAAO,EAAEM,KAAK,CAACN,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAYD,KAbA,CADD,CADF;AAkBD;;AA3C+B;;AA8ClC,eAAed,GAAf","sourcesContent":["import React from 'react';\nimport Plot from 'react-plotly.js'\nimport {get} from '../utils/Api'\nimport {Checkbox, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      ticker_list: [],\n      selected_tickers: []\n    };\n  }\n  componentDidMount = async () => {\n    get('stocks/').then((resp) => {\n      this.setState({ticker_list: resp})\n    })\n    console.log(this.state)\n  }\n\n  handleSelection(symbol){\n    const currentIndex = this.state.selected_tickers.indexOf(symbol)\n    if (currentIndex == -1) {\n      this.setState({selected_tickers: [...this.state.selected_tickers, symbol] })\n    } else {\n      this.state.selected_tickers.splice(currentIndex, 1)\n    }\n  }\n\n  render() {\n    return (\n      <List>\n      {this.state.ticker_list.map((value) => {\n        return (\n          <ListItem key={value.symbol} role={undefined} dense button onClick={() => {this.handleSelection(value.symbol)}}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={this.state.selected_tickers.indexOf(value.symbol) !== -1}\n                disableRipple\n              />\n            </ListItemIcon>\n            <ListItemText id={value.symbol} primary={value.symbol} />\n          </ListItem>\n        );\n      })}\n    </List>\n    );\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}