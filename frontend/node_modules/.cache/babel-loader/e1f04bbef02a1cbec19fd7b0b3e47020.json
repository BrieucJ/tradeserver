{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/TradeServer/frontend/src/components/App.js\";\nimport React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport { get } from '../utils/Api';\nimport { Container, Checkbox, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      get('stocks/').then(resp => {\n        this.setState({\n          ticker_list: resp\n        });\n      });\n    };\n\n    this.getPriceHistory = async symbol => {\n      get('pricehistorys/?symbol=' + symbol).then(resp => {\n        var prices = this.state.prices;\n        prices[symbol] = resp;\n        this.setState({\n          prices: prices\n        });\n      });\n    };\n\n    this.state = {\n      ticker_list: [],\n      selected_tickers: [],\n      prices: {}\n    };\n  }\n\n  handleSelection(symbol) {\n    console.log(symbol);\n    var selected_tickers = [...this.state.selected_tickers];\n    console.log(selected_tickers);\n    const currentIndex = selected_tickers.indexOf(symbol);\n\n    if (currentIndex === -1) {\n      this.setState({\n        selected_tickers: [...selected_tickers, symbol]\n      });\n      this.getPriceHistory(symbol);\n    } else {\n      this.setState({\n        selected_tickers: selected_tickers.splice(currentIndex, 1)\n      });\n    }\n  }\n\n  renderLineChart() {\n    var prices_tickers = Object.keys(this.state.prices);\n\n    for (let i = 0; i < prices_tickers.length; i++) {\n      const element = prices_tickers[i];\n      console.log(this.state.prices[element][0]);\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      width: 600,\n      height: 300,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"uv\",\n      stroke: \"#8884d8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CartesianGrid, {\n      stroke: \"#ccc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"price_date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, this.state.ticker_list.map(value => {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: value.symbol,\n        role: undefined,\n        dense: true,\n        button: true,\n        onClick: () => {\n          this.handleSelection(value.symbol);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        edge: \"start\",\n        checked: this.state.selected_tickers.indexOf(value.symbol) !== -1,\n        disableRipple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        id: value.symbol,\n        primary: value.symbol,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }));\n    })), this.renderLineChart());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/TradeServer/frontend/src/components/App.js"],"names":["React","LineChart","Line","CartesianGrid","XAxis","YAxis","get","Container","Checkbox","List","ListItem","ListItemIcon","ListItemText","App","Component","constructor","props","componentDidMount","then","resp","setState","ticker_list","getPriceHistory","symbol","prices","state","selected_tickers","handleSelection","console","log","currentIndex","indexOf","splice","renderLineChart","prices_tickers","Object","keys","i","length","element","data","render","map","value","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport {get} from '../utils/Api'\nimport {Container, Checkbox, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      ticker_list: [],\n      selected_tickers: [],\n      prices: {}\n    };\n  }\n\n  componentDidMount = async () => {\n    get('stocks/').then((resp) => {\n      this.setState({ticker_list: resp})\n    })\n  }\n\n  getPriceHistory = async (symbol) => {\n    get('pricehistorys/?symbol=' + symbol).then((resp) => {\n      var prices = this.state.prices;\n      prices[symbol] = resp  \n      this.setState({prices: prices});\n    })\n  }\n\n  handleSelection(symbol){\n    console.log(symbol)\n    var selected_tickers = [...this.state.selected_tickers]\n    console.log(selected_tickers)\n    const currentIndex = selected_tickers.indexOf(symbol)\n    if (currentIndex === -1) {\n      this.setState({selected_tickers: [...selected_tickers, symbol]})\n      this.getPriceHistory(symbol)\n    } else {\n      this.setState({selected_tickers: selected_tickers.splice(currentIndex, 1)})\n    }\n  }\n\n  renderLineChart(){\n    var prices_tickers = Object.keys(this.state.prices)\n    for (let i = 0; i < prices_tickers.length; i++) {\n      const element = prices_tickers[i];\n      console.log(this.state.prices[element][0])\n      \n    }\n    return(\n      <Container>\n        <LineChart width={600} height={300} data={data}>\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n          <CartesianGrid stroke=\"#ccc\" />\n          <XAxis dataKey=\"price_date\" />\n          <YAxis />\n        </LineChart>\n      </Container>\n\n    )\n  }\n\n\n  render() {\n    return (\n      <Container>\n      <List>\n      {this.state.ticker_list.map((value) => {\n        return (\n          <ListItem key={value.symbol} role={undefined} dense button onClick={() => {this.handleSelection(value.symbol)}}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={this.state.selected_tickers.indexOf(value.symbol) !== -1}\n                disableRipple\n              />\n            </ListItemIcon>\n            <ListItemText id={value.symbol} primary={value.symbol} />\n          </ListItem>\n        );\n      })}\n      </List>\n      {this.renderLineChart()}\n      </Container>\n    ); \n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}