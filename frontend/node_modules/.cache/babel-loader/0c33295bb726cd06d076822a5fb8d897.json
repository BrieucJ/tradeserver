{"ast":null,"code":"import _toConsumableArray from\"/Users/brieucjamain/Desktop/TradeServer/tradeserver/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/brieucjamain/Desktop/TradeServer/tradeserver/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/brieucjamain/Desktop/TradeServer/tradeserver/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/brieucjamain/Desktop/TradeServer/tradeserver/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/brieucjamain/Desktop/TradeServer/tradeserver/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/brieucjamain/Desktop/TradeServer/tradeserver/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/brieucjamain/Desktop/TradeServer/tradeserver/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{LineChart,Line,CartesianGrid,XAxis,YAxis}from'recharts';import{get}from'../utils/Api';import{Container,Checkbox,List,ListItem,ListItemIcon,ListItemText}from'@material-ui/core';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:get('stocks/').then(function(resp){_this.setState({ticker_list:resp});});case 1:case\"end\":return _context.stop();}}},_callee);}));_this.getPriceHistory=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(symbol){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:get('pricehistorys/?symbol='+symbol).then(function(resp){var prices=_this.state.prices;prices[symbol]=resp;_this.setState({prices:prices});});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}();_this.state={ticker_list:[],selected_tickers:[],prices:{}};return _this;}_createClass(App,[{key:\"handleSelection\",value:function handleSelection(symbol){console.log(symbol);var selected_tickers=_toConsumableArray(this.state.selected_tickers);console.log(selected_tickers);var currentIndex=selected_tickers.indexOf(symbol);if(currentIndex===-1){this.setState({selected_tickers:[].concat(_toConsumableArray(selected_tickers),[symbol])});this.getPriceHistory(symbol);}else{this.setState({selected_tickers:selected_tickers.splice(currentIndex,1)});}}},{key:\"renderLineChart\",value:function renderLineChart(){var prices_tickers=Object.keys(this.state.prices);// for (let i = 0; i < prices_tickers.length; i++) {\n//   const element = prices_tickers[i];\n// }\nconsole.log(prices_tickers.length);console.log(this.state.prices[prices_tickers[0]]);if(prices_tickers.length!==0){return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(LineChart,{width:600,height:300,data:this.state.prices[prices_tickers[0]]},/*#__PURE__*/React.createElement(Line,{type:\"monotone\",dataKey:\"close\",stroke:\"#8884d8\"}),/*#__PURE__*/React.createElement(CartesianGrid,{stroke:\"#ccc\"}),/*#__PURE__*/React.createElement(XAxis,{dataKey:\"price_date\"}),/*#__PURE__*/React.createElement(YAxis,null)));}}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(List,null,this.state.ticker_list.map(function(value){return/*#__PURE__*/React.createElement(ListItem,{key:value.symbol,role:undefined,dense:true,button:true,onClick:function onClick(){_this2.handleSelection(value.symbol);}},/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(Checkbox,{edge:\"start\",checked:_this2.state.selected_tickers.indexOf(value.symbol)!==-1,disableRipple:true})),/*#__PURE__*/React.createElement(ListItemText,{id:value.symbol,primary:value.symbol}));})),this.renderLineChart());}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/TradeServer/tradeserver/frontend/src/components/App.js"],"names":["React","LineChart","Line","CartesianGrid","XAxis","YAxis","get","Container","Checkbox","List","ListItem","ListItemIcon","ListItemText","App","props","componentDidMount","then","resp","setState","ticker_list","getPriceHistory","symbol","prices","state","selected_tickers","console","log","currentIndex","indexOf","splice","prices_tickers","Object","keys","length","map","value","undefined","handleSelection","renderLineChart","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport {get} from '../utils/Api'\nimport {Container, Checkbox, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      ticker_list: [],\n      selected_tickers: [],\n      prices: {}\n    };\n  }\n\n  componentDidMount = async () => {\n    get('stocks/').then((resp) => {\n      this.setState({ticker_list: resp})\n    })\n  }\n\n  getPriceHistory = async (symbol) => {\n    get('pricehistorys/?symbol=' + symbol).then((resp) => {\n      var prices = this.state.prices;\n      prices[symbol] = resp  \n      this.setState({prices: prices});\n    })\n  }\n\n  handleSelection(symbol){\n    console.log(symbol)\n    var selected_tickers = [...this.state.selected_tickers]\n    console.log(selected_tickers)\n    const currentIndex = selected_tickers.indexOf(symbol)\n    if (currentIndex === -1) {\n      this.setState({selected_tickers: [...selected_tickers, symbol]})\n      this.getPriceHistory(symbol)\n    } else {\n      this.setState({selected_tickers: selected_tickers.splice(currentIndex, 1)})\n    }\n  }\n\n  renderLineChart(){\n    var prices_tickers = Object.keys(this.state.prices)\n    // for (let i = 0; i < prices_tickers.length; i++) {\n    //   const element = prices_tickers[i];\n    // }\n    console.log(prices_tickers.length)\n    console.log(this.state.prices[prices_tickers[0]])\n    if (prices_tickers.length !== 0) {\n      return(\n        <Container>\n          <LineChart width={600} height={300} data={this.state.prices[prices_tickers[0]]}>\n            <Line type=\"monotone\" dataKey=\"close\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis dataKey=\"price_date\" />\n            <YAxis />\n          </LineChart>\n        </Container>\n      )\n    }\n  }\n\n\n  render() {\n    return (\n      <Container>\n      <List>\n      {this.state.ticker_list.map((value) => {\n        return (\n          <ListItem key={value.symbol} role={undefined} dense button onClick={() => {this.handleSelection(value.symbol)}}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={this.state.selected_tickers.indexOf(value.symbol) !== -1}\n                disableRipple\n              />\n            </ListItemIcon>\n            <ListItemText id={value.symbol} primary={value.symbol} />\n          </ListItem>\n        );\n      })}\n      </List>\n      {this.renderLineChart()}\n      </Container>\n    ); \n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}