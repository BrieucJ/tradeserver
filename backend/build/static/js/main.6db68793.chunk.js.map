{"version":3,"sources":["utils/Api.js","utils/Constants.js","components/App.js","index.js"],"names":["get","path","opts","makeRequest","token","localStorage","getItem","url","method","headers","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","this","status","JSON","parse","response","resp","error","statusText","message","onerror","Object","keys","forEach","key","setRequestHeader","params","map","encodeURIComponent","join","send","App","props","componentDidMount","a","then","setState","ticker_list","getPriceHistory","symbol","prices","state","selected_tickers","console","log","currentIndex","indexOf","splice","prices_tickers","length","Container","width","height","data","type","dataKey","stroke","List","value","ListItem","role","dense","button","onClick","handleSelection","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","id","primary","renderLineChart","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6db68793.chunk.js","sourcesContent":["import {API_URL} from './Constants'\n\nexport const get = (path, opts = {}) => {\n  return makeRequest(path, opts)\n}\n\nexport const post = (path, data, opts) => {\n  return makeRequest(path, {\n    method: \"POST\",\n    params: JSON.stringify(data),\n    opts: opts\n  })\n}\n\nexport const put = (path, data, opts) => {\n  return makeRequest(path, {\n    method: \"PUT\",\n    params: JSON.stringify(data),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n}\n\nexport const patch = (path, data, opts) => {\n  return makeRequest(path, {\n    method: \"PATCH\",\n    params: JSON.stringify(data),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n}\n\nexport const destroy = (path, opts) => {\n  return makeRequest(path, { method: \"DELETE\" })\n}\n\nexport const makeRequest = (path, opts) => {\n  // console.log('REQUEST')\n  let token = localStorage.getItem('token')\n  let url = API_URL + path\n  let method = opts.method || \"GET\"\n  opts.headers = opts.headers || {}\n//   opts.headers[\"Locale\"] = i18n.locale\n//   opts.headers[\"Timezone\"] = Localization.timezone\n  opts.headers[\"Accept\"] = \"application/json\"\n  opts.headers[\"Content-Type\"] = \"application/json\"\n  if (token !== undefined) { opts.headers[\"Authorization\"] = token }\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(method, url);\n    xhr.onload = function () {\n      if (this.status >= 200 && this.status < 300) {\n        resolve(JSON.parse(xhr.response));\n      } else {\n        var resp = JSON.parse(xhr.response).error;\n        reject({ \n          status: resp.status,\n          statusText: resp.message,\n        });\n      }\n    };\n    xhr.onerror = function () {\n      var resp = JSON.parse(xhr.response).error;\n      reject({\n        status: resp.status,\n        statusText: resp.message,\n      });\n    };\n    if (opts.headers) {\n      Object.keys(opts.headers).forEach(function (key) {\n        xhr.setRequestHeader(key, opts.headers[key]);\n      });\n    }\n    var params = opts.params;\n    // Need to stringify if we've been given an object\n    // If we have a string, this is skipped.\n    if (params && typeof params === 'object') {\n      params = Object.keys(params).map(function (key) {\n        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    xhr.send(params);\n  });\n}","export const API_URL = \"http://localhost:8000/api/\"\nexport const APP_NAME = 'TraderServer'","import React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport {get} from '../utils/Api'\nimport {Container, Checkbox, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      ticker_list: [],\n      selected_tickers: [],\n      prices: {}\n    };\n  }\n\n  componentDidMount = async () => {\n    get('stocks/').then((resp) => {\n      this.setState({ticker_list: resp})\n    })\n  }\n\n  getPriceHistory = async (symbol) => {\n    get('pricehistorys/?symbol=' + symbol).then((resp) => {\n      var prices = this.state.prices;\n      prices[symbol] = resp  \n      this.setState({prices: prices});\n    })\n  }\n\n  handleSelection(symbol){\n    console.log(symbol)\n    var selected_tickers = [...this.state.selected_tickers]\n    console.log(selected_tickers)\n    const currentIndex = selected_tickers.indexOf(symbol)\n    if (currentIndex === -1) {\n      this.setState({selected_tickers: [...selected_tickers, symbol]})\n      this.getPriceHistory(symbol)\n    } else {\n      this.setState({selected_tickers: selected_tickers.splice(currentIndex, 1)})\n    }\n  }\n\n  renderLineChart(){\n    var prices_tickers = Object.keys(this.state.prices)\n    // for (let i = 0; i < prices_tickers.length; i++) {\n    //   const element = prices_tickers[i];\n    // }\n    console.log(prices_tickers.length)\n    console.log(this.state.prices[prices_tickers[0]])\n    if (prices_tickers.length !== 0) {\n      return(\n        <Container>\n          <LineChart width={600} height={300} data={this.state.prices[prices_tickers[0]]}>\n            <Line type=\"monotone\" dataKey=\"close\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis dataKey=\"price_date\" />\n            <YAxis />\n          </LineChart>\n        </Container>\n      )\n    }\n  }\n\n\n  render() {\n    return (\n      <Container>\n          Hello\n      <List>\n      {this.state.ticker_list.map((value) => {\n        return (\n          <ListItem key={value.symbol} role={undefined} dense button onClick={() => {this.handleSelection(value.symbol)}}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={this.state.selected_tickers.indexOf(value.symbol) !== -1}\n                disableRipple\n              />\n            </ListItemIcon>\n            <ListItemText id={value.symbol} primary={value.symbol} />\n          </ListItem>\n        );\n      })}\n      </List>\n      {this.renderLineChart()}\n      </Container>\n    ); \n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}